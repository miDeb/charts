// Mocks generated by Mockito 5.0.0-nullsafety.7 from annotations
// in charts_common/test/chart/cartesian/cartesian_chart_test.dart.
// Do not manually edit this file.

import 'package:charts_common/src/chart/common/behavior/a11y/a11y_node.dart'
    as _i8;
import 'package:charts_common/src/chart/common/chart_context.dart' as _i7;
import 'package:charts_common/src/common/date_time_factory.dart' as _i3;
import 'package:charts_common/src/common/graphics_factory.dart' as _i9;
import 'package:charts_common/src/common/line_style.dart' as _i4;
import 'package:charts_common/src/common/rtl_spec.dart' as _i2;
import 'package:charts_common/src/common/text_element.dart' as _i6;
import 'package:charts_common/src/common/text_style.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeRTLSpec extends _i1.Fake implements _i2.RTLSpec {}

class _FakeDateTimeFactory extends _i1.Fake implements _i3.DateTimeFactory {}

class _FakeLineStyle extends _i1.Fake implements _i4.LineStyle {}

class _FakeTextStyle extends _i1.Fake implements _i5.TextStyle {}

class _FakeTextElement extends _i1.Fake implements _i6.TextElement {}

/// A class which mocks [ChartContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockChartContext extends _i1.Mock implements _i7.ChartContext {
  MockChartContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get chartContainerIsRtl =>
      (super.noSuchMethod(Invocation.getter(#chartContainerIsRtl),
          returnValue: false) as bool);
  @override
  _i2.RTLSpec get rtlSpec => (super.noSuchMethod(Invocation.getter(#rtlSpec),
      returnValue: _FakeRTLSpec()) as _i2.RTLSpec);
  @override
  bool get isRtl =>
      (super.noSuchMethod(Invocation.getter(#isRtl), returnValue: false)
          as bool);
  @override
  bool get isTappable =>
      (super.noSuchMethod(Invocation.getter(#isTappable), returnValue: false)
          as bool);
  @override
  double get pixelsPerDp =>
      (super.noSuchMethod(Invocation.getter(#pixelsPerDp), returnValue: 0.0)
          as double);
  @override
  _i3.DateTimeFactory get dateTimeFactory =>
      (super.noSuchMethod(Invocation.getter(#dateTimeFactory),
          returnValue: _FakeDateTimeFactory()) as _i3.DateTimeFactory);
  @override
  void requestAnimation(Duration? transition) =>
      super.noSuchMethod(Invocation.method(#requestAnimation, [transition]),
          returnValueForMissingStub: null);
  @override
  void enableA11yExploreMode(List<_i8.A11yNode>? nodes,
          {String? announcement}) =>
      super.noSuchMethod(
          Invocation.method(
              #enableA11yExploreMode, [nodes], {#announcement: announcement}),
          returnValueForMissingStub: null);
}

/// A class which mocks [GraphicsFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphicsFactory extends _i1.Mock implements _i9.GraphicsFactory {
  MockGraphicsFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.LineStyle createLinePaint() =>
      (super.noSuchMethod(Invocation.method(#createLinePaint, []),
          returnValue: _FakeLineStyle()) as _i4.LineStyle);
  @override
  _i5.TextStyle createTextPaint() =>
      (super.noSuchMethod(Invocation.method(#createTextPaint, []),
          returnValue: _FakeTextStyle()) as _i5.TextStyle);
  @override
  _i6.TextElement createTextElement(String? text) =>
      (super.noSuchMethod(Invocation.method(#createTextElement, [text]),
          returnValue: _FakeTextElement()) as _i6.TextElement);
}
